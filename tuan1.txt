10/03/23

- Khai báo mảng: 

	int [] numbers = new int[5];		
	int[] numbers = {1, 7, 5, 1}; 		

- Khởi tạo nhanh mảng

- Duyệt mảng bằng vòng lặp for 
Bài tập 
BT1: Tính tổng các giá trị trong mảng

BT2: Đếm xem mảng có bao nhiêu số chẵn

BT3: Tìm giá trị nhỏ nhất của mảng

BT4: Thêm phần tử vào mảng

BT5: Xóa phần tử khỏi mảng

BT6: Gộp 2 mảng a, b lại với nhau

Bài tập vòng lặp ai chưa làm thì làm bù

Đọc bài trước, note lại và demo:
- Lớp Wrapper trong java
  Wrapper class trong Java là các lớp được sử dụng để bao bọc (wrap) các kiểu dữ liệu nguyên thủy (primitive data types) như int, float, double, boolean, v.v. để chúng có thể được sử dụng như các đối tượng (object) trong Java.
  Các wrapper class này cung cấp các phương thức để chuyển đổi giá trị của các kiểu dữ liệu nguyên thủy thành đối tượng và ngược lại. Chúng cũng cung cấp các phương thức để thực hiện các phép tính toán và so sánh giữa các đối tượng của chúng. Ví dụ sử dụng wrapper class Integer để chuyển đổi một chuỗi sang số nguyên:
  
  String str = "123";
  Integer num = Integer.parseInt(str);
  System.out.println(num); // Output: 123


- Kiểu tham chiếu và tham trị trong Java

Truyền tham trị (Pass by Value):
Khi truyền tham trị vào phương thức, giá trị của biến được sao chép vào một tham số khác trong phương thức. Do đó, thay đổi giá trị của tham số trong phương thức sẽ không ảnh hưởng đến giá trị của biến ban đầu ở bên ngoài phương thức.

Truyền tham chiếu (Pass by Reference):
Khi truyền tham chiếu vào phương thức, địa chỉ của biến được sao chép vào tham số trong phương thức. Do đó, thay đổi giá trị của tham số trong phương thức sẽ ảnh hưởng đến giá trị của biến ban đầu ở bên ngoài phương thức.
Ví dụ:

13/03/23:
// Scanner dùng để nhập thông tin
public static Scanner scanner = new Scanner(System.in);

// In có xuống dòng
System.out.println();

// Lớp Arrays có phương thức toString dùng để chuyển 1 mảng thành chuỗi
Arrays.toString(a)

// In có format
System.out.printf("%s xin chao", "C1222I1");

//Sao chép 1 mảng gốc thành 1 mảng mới theo 1 độ dài cho trước
Arrays.copyOf(a, a.length + 1);

14/03/23

Đọc thêm và notes:
Print format trong java
https://niithanoi.edu.vn/printf-trong-java.html

* Printf: Xuất ra màng hình kết quả đồng thời có thể định dạng được kết quả đó nhờ vào các đối số thích hợp.
Cú pháp:

System.out.printf(local, format, arguments1, arguments2,…, argumentsn);
 
Trong đó:

- Local: Nếu khác null sẽ được tự động định dạng theo khu vực.
- format: Quy định chuẩn định dạng đầu ra cho các đối số
- Các argument: Đối số cần định dạng.

+ %c: Ký tự
+ %d: Số thập phân (số nguyên) (cơ số 10)
+ %e: Dấu phẩy động theo cấp số nhân
+ %f: Dấu phẩy động
+ %i: Số nguyên (cơ sở 10)
+ %o: Số bát phân (cơ sở 8)
+ %s: Chuỗi
+ %u: Số thập phân (số nguyên) không dấu
+ %x: Số trong hệ thập lục phân (cơ sở 16)
+ %t: Định dạng ngày / giờ
+ %%: Dấu phần trăm
+ \%: Dấu phần trăm

Ví dụ:
int age = 30;
double weight = 65.5;
System.out.printf("Age: %d, Weight: %.2f", age, weight);

Đoạn mã trên sẽ in ra chuỗi "Age: 30, Weight: 65.50" trên màn hình console.


Xem trước: OOP
https://www.youtube.com/watch?v=tcGNKqhu3GE
+ Từ khóa class, từ khóa new
Lớp (class) là khuôn mẫu định nghĩa các thuộc tính (properties) và hành vi (behaviors) của các thực thể.
Ví dụ, đoạn mã sau định nghĩa một lớp "Person" có hai thuộc tính là "name" và "age":
public class Person {
    String name;
    int age;
}
Từ khoá "new" được sử dụng để tạo một đối tượng mới của một lớp cụ thể trong Java. Khi bạn tạo một đối tượng,
bạn cần chỉ định lớp mà đối tượng thuộc về và lưu trữ tham chiếu đến đối tượng đó trong một biến.

Ví dụ, nếu bạn muốn tạo một đối tượng "Rectangle" để biểu diễn một hình chữ nhật, bạn có thể sử dụng từ khoá "new" như sau:
Rectangle rect = new Rectangle(10, 20);
Trong đó, "Rectangle" là tên của lớp, "rect" là tên của biến chứa đối tượng mới được tạo, và "new Rectangle(10, 20)" là toán tử tạo đối tượng.
Trong trường hợp này, đối tượng được tạo có chiều rộng là 10 và chiều cao là 20. Sau khi tạo đối tượng, bạn có thể sử dụng các phương thức và
thuộc tính của lớp Rectangle để làm việc với đối tượng này.


+ thuộc tính, phương thức là gì
Thuộc tính (hay còn gọi là biến thành viên) là các biến được khai báo trong một lớp. Chúng được sử dụng để lưu trữ dữ liệu cho đối tượng được tạo
từ lớp đó. Mỗi đối tượng có các giá trị riêng cho các thuộc tính của nó.
 public class Person {
    String name;
    int age;
    String address;
    String phoneNumber;
 }

Các phương thức (method) nó định nghĩa ứng xử của lớp. Một phương thức là một tập hợp các khối lệnh (code) để thi hành một chức năng nào đó.
Ví dụ như System.out.println() đã biết, là một phương thức. Bạn có thể định nghĩa phương thức riêng của bạn, thi hành với một nhiệm vụ cụ thể nào đó.
Phương thức được định nghĩa bên trong thân của lớp.

+ phương thức khởi tạo:
Trong Java, một phương thức khởi tạo là một phương thức đặc biệt được sử dụng để khởi tạo đối tượng của một lớp. Phương thức khởi tạo có tên giống với
tên của lớp và không có kiểu trả về được khai báo. Khi một đối tượng được tạo, phương thức khởi tạo sẽ được gọi để khởi tạo các giá trị cho các thuộc tính
của đối tượng đó.
Ví dụ về định nghĩa phương thức khởi tạo trong Java:
public class MyClass {
    private int x;
    private String s;

    // Phương thức khởi tạo mặc định
    public MyClass() {
        x = 0;
        s = "";
    }

    // Phương thức khởi tạo có tham số
    public MyClass(int x, String s) {
        this.x = x;
        this.s = s;
    }
}
Trong ví dụ trên, lớp MyClass có hai phương thức khởi tạo: phương thức khởi tạo mặc định và phương thức khởi tạo có tham số. Phương thức khởi tạo mặc định
sẽ khởi tạo x và s với giá trị mặc định của chúng, trong khi phương thức khởi tạo có tham số sẽ sử dụng các giá trị được chuyển vào để khởi tạo x và s.

/---------------------------------------------------------
15/03
Đọc tìm hiểu và demo
+ access modifier trong Java
- Default: chỉ có thể truy cập bên trong package.
- Private: chỉ có thể được truy cập trong chính lớp được khai báo đó.
- Public: có thể truy cập ở bất cứ đâu. Tuy nhiên, nếu lớp public chúng ta đang cố gắng truy cập là trong một package khác,
  thì lớp public này vẫn cần được import trước khi truy cập.
- Protected: có thể truy cập bên trong package và bên ngoài package nhưng chỉ thông qua tính kế thừa.

+ biến static trong java
https://www.youtube.com/watch?v=YTYnNFCcDXA
Khi bạn khai báo một biến là static, thì biến đó được gọi là biến tĩnh, hay biến static.
Biến static có thể được sử dụng để tham chiếu thuộc tính chung của tất cả đối tượng (mà không là duy nhất cho mỗi đối tượng),
ví dụ như tên công ty của nhân viên, tên trường học của các sinh viên, ...
  Cú pháp: modifier static data_type variable_name;
  Khai báo biến static:
    class Application{
    public static String language = "english"; }


+ Nested class là gì?
Nested class(lớp lồng nhau) là một lớp được khai báo bên trong lớp khác.
   Cú pháp:
   class OuterClass {
       ...
       static class StaticNestedClass {
       ...
       }
       class InnerClass {
       ...
       }
   }


+ biến instance và biến local, biến static  trong java
https://viettuts.vn/java/bien-trong-java
- Biến local được khai báo trong các phương thức, hàm contructor hoặc trong các block. Không được sử dụng "access modifier" khi khai báo biến local.
- Biến instance được khai báo trong một lớp(class), bên ngoài các phương thức, constructor và các block. Được phép sử dụng "access modifier" khi khai
 báo biến instance, mặc định là "default".
- Biến static được khai báo trong một class với từ khóa "static", phía bên ngoài các phương thức, constructor và block.

